<!-- These targets are used by netbeans ide -->
<project name="rti-common-installer" default="-fail">
    <import file="common.xml"/>
    
    <target name="-init-installer" depends="-init-deps">
        <property name="preferred.heap.size" value="256m" description="preferred vm heap size for exe launcher"/>
        <fail unless="dist.dir"/>
        <property name="install.dir" value="${dist.dir}/install"/>
    </target>
    
    <target name="local-install" description="build local installation" depends="jar-deps,jar-no-deps,-local-install"/>

    <target name="clean-install" description="clean local installation" depends="-init">
        <delete failonerror="false" dir="${dist.dir}/install"/>
    </target>
    
    <target name="local-install-no-build" description="build local installation" depends="-local-install"/>
    
    <target name="-install-jre" depends="-init" if="jre.install.dest.dir">
        <fail unless="jre.install.dest.dir" message="You must define the name of the jre destination directory"/>
        <fail unless="jre.install.src.dir" message="You must define the path to the jre used for installation"/>
        <mkdir dir="${install.dir}/${jre.install.dest.dir}"/>
        <copy failonerror="false" todir="${install.dir}/${jre.install.dest.dir}"><fileset dir="${jre.install.src.dir}"/></copy>
    </target>
    
    <target name="install-license" description="perform license installation" depends="generate-license,-install-license"/>
    
    <target name="generate-license" unless="license.file" depends="-bootstrap-cipher" description="Generate a license file">
        <fail unless="license.owner" message="Must define 'license.owner' property"/>
        <fail unless="license.type" message="Must define 'license.type' property"/>
        <genlicense owner="${license.owner}" type="${license.type}"/>
    </target>
    
    <target name="-local-install" depends="-standard-local-install,-install-jre,install-license"/>
        
        
    <target name="-standard-local-install">
        <standard-local-install installDir="${install.dir}"/>
    </target>
    
    <target name="-install-license" if="license.file">
        <copy failonerror="true" todir="${install.dir}/system" file="${license.file}"/>
    </target>
    
    <target name="-bootstrap-cipher" depends="-init">
        <ant antfile="${rtibuild.dir}/externals/RTiCipher/conf/build.xml" dir="${rtibuild.dir}/externals/RTiCipher" target="jar"/>
    </target>
    
    <target name="generate-launcher-script" description="Generate a launcher script for this product" depends="-init-deps,-init-java">
        <mkdir dir="scripts"/>
        <property name="script.name" value="scripts/run" />
        <available property="script.exists" file="${script.name}" />
        <pathconvert property="cygpath" targetos="windows">
            <path path="${run.classpath.computed}" />
        </pathconvert>
        <fail if="script.exists" message="I'm not going to overwrite the existing script" />
        <filter token="cygpath" value="${cygpath}"/>
        <filter token="java.exe" value="${java.exe}"/>
        <filter token="run.classpath.computed" value="${run.classpath.computed}"/>
        <copy file="${ant.file.rti-common-build}/../run.template" tofile="${script.name}" filtering="true"/>
        <chmod perm="u+x" file="${script.name}" />
    </target>
    
    <target name="generate-main-launcher" description="Generate a launcher script for this product" depends="-init-deps,-init-java">
        <requireprop name="java.main.class"/>
        <mkdir dir="scripts"/>
        <property name="script.name" value="scripts/${product.name}.bat" />
        <available property="script.exists" file="${script.name}" />
        <collectjars useBuildDirs="false" excludes="${product.disabled.jars}"/>
        <fail if="launcher.vm.args.safe" message="don't set launcher.vm.args.safe"/>
        <condition property="launcher.vm.args.safe" value="">
            <not><isset property="launcher.vm.args"/></not>
        </condition>
        <property name="launcher.vm.args.safe" value="${launcher.vm.args}"/>
        <pathconvert property="launchpath" targetos="windows">
            <path path="${collected.jar.deps}"/>
            <path location="${jar.name}"/>
            <chainedmapper>
                <mapper type="flatten"/>
                <mapper type="glob" from="*.jar" to="%HOMED%\bin\*.jar"/>
            </chainedmapper>
        </pathconvert>
        <echo file="${script.name}">
            SET HOMED=\${product.name}
            SET JREHOMED=%HOMED%\jre_150
            SET VMARGS=-D${product.name}.home="%HOMED%"
            SET CLASSPATH="${launchpath}"
            "%JREHOMED%\bin\java" -Xmx256m %VMARGS% ${launcher.vm.args.safe} -cp %CLASSPATH% ${java.main.class}
        </echo>
    </target>
    
    <macrodef name="standard-local-install" description="perform a local install for a 'standard' app">
        <attribute name="licenseOwner" default="Demo User"/>
        <attribute name="licenseType" default="Demo"/>
        <attribute name="installDir"/>
        <sequential>
            <property name="license.owner" value="@{licenseOwner}"/>
            <property name="license.type" value="@{licenseType}"/>
            
            <mkdir dir="@{installDir}"/>
            <mkdir dir="@{installDir}/bin"/>
            <mkdir dir="@{installDir}/doc"/>
            <mkdir dir="@{installDir}/system"/>
            
            <collectjars refid="collected.jar.files" excludes="${product.disabled.jars}"/>
            <copy todir="@{installDir}/bin" flatten="true">
                <path refid="collected.jar.files"/>
            </copy>
        </sequential>
    </macrodef>
    
    <macrodef name="make-exe" description="create an executable">
        <attribute name="destDir" default="${dist.dir}/install/bin"/>
        <attribute name="exe" default="${product.name}-${product.version}"/>
        <attribute name="mainClass" default="${java.main.class}"/>
        <attribute name="productIcon" default="${product.icon}"/>
        <attribute name="preferredHeapSize" default="${preferred.heap.size}"/>
        <attribute name="jreName"/>
        <sequential>
            <!-- @todo FIX ME -->
            <copy failonerror="false" file="${ant.file.rti-common-build}/../lib/winrun4j.exe" tofile="@{destDir}/@{exe}.exe"/>
            <chmod file="@{destDir}/@{exe}.exe" perm="ugo+rx"/>
            <echo file="@{destDir}/@{exe}.ini">classpath.1=bin/*.jar
                main.class=@{mainClass}
                vm.location=../@{jreName}/bin/client/jvm.dll
                vmarg.1=-Dcom.sun.management.jmxremote
                vmarg.2=-ea
                vm.heapsize.preferred=@{preferredHeapSize}
                working.directory=..
            </echo>
        </sequential>
    </macrodef>
    
    <macrodef name="nsisinstaller" description="invoke makensis">
        <attribute name="dir" default="${nsis.dir}"/>
        <attribute name="exe" default="${nsis.exe}"/>
        <attribute name="nsi"/>
        <sequential>
            <available property="nsi.file.exists" file="@{dir}/@{nsi}"/>
            <exec dir="@{dir}" executable="@{exe}" failonerror="true">
                <arg value="@{nsi}"/>
            </exec>
        </sequential>
    </macrodef>
    
    <macrodef name="genlicense">
        <attribute name="expirationCount" default="1"/>
        <attribute name="expirationUnit" default="month"/>
        <attribute name="product" default="${product.name}"/>
        <attribute name="count" default="NoLimit"/>
        <attribute name="outfile" default="${dist.dir}/install/system/@{product}.cfg"/>
        <attribute name="append" default="false"/>
        <attribute name="owner"/>
        <attribute name="type"/>
        <sequential>
            <taskdef name="licensegen" classpath="${rtibuild.dir}/externals/RTiCipher/dist/RTiCipher_142.jar" classname="RTi.App.RTiCipher.GenerateLicenseTask"/>
            <tstamp>
                <format property="expires" offset="@{expirationCount}" pattern="yyyyMMdd" unit="@{expirationUnit}"/>
            </tstamp>
            <property name="product" value="${product.name}"/>
            <licensegen product="@{product}" licenseOwner="@{owner}" licenseType="@{type}" licenseCount="@{count}" licenseExpires="${expires}" property="licensekey"/>
            <echo file="@{outfile}" append="@{append}">
                [@{product}]
                LicenseOwner=@{owner}
                LicenseType=@{type}
                LicenseCount=@{count}
                LicenseExpires=${expires}
                LicenseKey=${licensekey}
            </echo>
        </sequential>
    </macrodef>
    
</project>
